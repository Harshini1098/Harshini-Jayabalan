package com.example.newdemo;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.ui.Model;

@Controller	// This means that this class is a Controller
public class MainController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private PersonRepository PersonRepository;
    @PostMapping(path="/addPerson") // Map ONLY POST Requests
    public String addNewPerson (@RequestParam String FirstName,@RequestParam String LastName,
                                @RequestParam String gender,@RequestParam String age, @RequestParam String email,  Model model) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        Person p = new Person();
        p.setFirstName(FirstName);
        p.setLastName(LastName);
        p.setGender(gender);
        p.setAge(age);
        p.setEmail(email);
        PersonRepository.save(p);
        model.addAttribute("msg", "Person : "+ FirstName +" added successfully to the database");
        return "greeting";
    }
    @GetMapping(path="/deletePerson") // Map ONLY POST Requests
    public String deletePerson (@RequestParam Integer Sno, Model model) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        PersonRepository.deleteBySno(sno);
        model.addAttribute("msg", "Person : "+ Sno +" deleted successfully from the database");
        return "greeting";
    }

    @GetMapping(path="/listPerson")
    public @ResponseBody Iterable<Person> getAllPerson() {
        // This returns a JSON or XML with the users
        return PersonRepository.findAll();
    }

}
